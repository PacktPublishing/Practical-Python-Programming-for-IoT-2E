# Autogenerated file
def render(*a, **d):
    yield """<!-- 
    The following """
    yield """ is required by the utemplate engine used by Microdot.
    It defines the arguements used in the page. If it is missing you will receive
    the error \"NameError: name 'pin' isn't defined\" on the terminal console as you load
    this page in a browser.

    In microdot_server_pico.py the following code snippet is where the pin arguement is passed to this page:
    
    async def index(request):
        return Template('index_api_client.html').render(pin=LED_GPIO_PIN), """
    yield """{'Content-Type': 'text/html'}
-->
"""
    yield """<!DOCTYPE html>
<html>

<head>
    <title>Microdot RESTful API Example for Pico W</title>
    <script src=\"/static/jquery.min.js\"></script> <!--(1)-->
    <script type=\"text/javascript\">

        // GET request to server to retrieve LED state.
        function getState() """
    yield """{
            $.get(\"/led\", function (serverResponse, status) """
    yield """{                       // (2)
                console.log(serverResponse)
                updateControls(serverResponse)                                      // (3)
            })
        }


        // POST Request to server to set LED state.
        function postUpdate(payload) """
    yield """{                                               // (4)
            $.post("""
    yield """{
                url: \"/led\",
                data: JSON.stringify(payload),
                contentType: 'application/json; charset=utf-8'
            }).done(
                function (serverResponse, status) """
    yield """{
                    console.log(serverResponse)
                    updateControls(serverResponse)                                  // (5)
                })
        }


        function updateControls(data) """
    yield """{
            $(\"input[type=range].brightnessLevel\").val(data.level)                  // (6)
            $(\"#brightnessLevel\").html(data.level)
        }


        $(document).ready(function () """
    yield """{
            // Event listener for Slider value changes.
            // .on('input', ...) will fire as the slider changes (= lots of network traffic). Change to
            // .on('change', ...) to fire only after mouse button is released.
            // Note that on a Pico W, using 'input' may feel a little sluggish as you adjust the slider
            // due to the amount of network traffic being genertated. 
            $(\"input[type=range].brightnessLevel\").on('change', function () """
    yield """{       // (7)
                brightness_level = $(this).val()                                    // (8)
                payload = """
    yield """{ \"level\": brightness_level }                             // (9)
                postUpdate(payload)
            })

            // Initialise slider value form state on server.
            getState()                                                              // (10)
        });

    </script>
</head>

<body>
    <h1>Flask RESTful API Example</h1>
    """
    if pin:
        yield """    LED is connected to GPIO """
        yield str(pin)
        yield """<br> <!--(11)-->
    """
    yield """    Brightness: <span id=\"brightnessLevel\"></span>%<br>
    <input type=\"range\" min=\"0\" max=\"100\" value=\"0\" class=\"brightnessLevel\"> <!--(12)-->
</body>

</html>"""
